diff -aurN gnome-control-center-3.8.0.orig/configure.ac gnome-control-center-3.8.0/configure.ac
--- gnome-control-center-3.8.0.orig/configure.ac	2013-03-26 10:41:09.000000000 +0100
+++ gnome-control-center-3.8.0/configure.ac	2013-03-29 21:12:10.557398366 +0100
@@ -303,17 +303,21 @@
 esac
 AM_CONDITIONAL(BUILD_WACOM, [test x"$have_wacom" = x"yes"])
 
-# Kerberos kerberos support
-AC_PATH_PROG(KRB5_CONFIG, krb5-config, no)
-if test "$KRB5_CONFIG" = "no"; then
-  AC_MSG_ERROR([krb5-config executable not found in your path - should be installed with the kerberos libraries])
-fi
+AC_ARG_ENABLE([kerberos],
+              AS_HELP_STRING([--disable-kerberos], [disable kerberos support (default: enabled)]),,
+              [enable_kerberos=yes])
 
-AC_MSG_CHECKING(for krb5 libraries and flags)
-KRB5_CFLAGS="`$KRB5_CONFIG --cflags`"
-KRB5_LIBS="`$KRB5_CONFIG --libs`"
-AC_MSG_RESULT($KRB5_CFLAGS $KRB5_LIBS)
+if test x"$enable_kerberos" != x"no" ; then
+    AC_PATH_PROG(KRB5_CONFIG, krb5-config, no)
+    if test "$KRB5_CONFIG" = "no"; then
+      AC_MSG_ERROR([krb5-config executable not found in your path - should be installed with the kerberos libraries])
+    fi
 
+    AC_MSG_CHECKING(for krb5 libraries and flags)
+    KRB5_CFLAGS="`$KRB5_CONFIG --cflags`"
+    KRB5_LIBS="`$KRB5_CONFIG --libs`"
+    AC_MSG_RESULT($KRB5_CFLAGS $KRB5_LIBS)
+fi
 AC_SUBST(KRB5_CFLAGS)
 AC_SUBST(KRB5_LIBS)
 
diff -aurN gnome-control-center-3.8.0.orig/panels/user-accounts/um-account-dialog.c gnome-control-center-3.8.0/panels/user-accounts/um-account-dialog.c
--- gnome-control-center-3.8.0.orig/panels/user-accounts/um-account-dialog.c	2013-03-15 12:59:32.000000000 +0100
+++ gnome-control-center-3.8.0/panels/user-accounts/um-account-dialog.c	2013-03-29 21:11:34.663079768 +0100
@@ -27,9 +27,12 @@
 #include <act/act.h>
 
 #include "um-account-dialog.h"
-#include "um-realm-manager.h"
 #include "um-utils.h"
 
+#ifdef KERBEROS
+#include "um-realm-manager.h"
+#endif
+
 typedef enum {
         UM_LOCAL,
         UM_ENTERPRISE,
@@ -41,6 +44,7 @@
 
 static void   dialog_validate      (UmAccountDialog *self);
 
+#ifdef KERBEROS
 static void   on_join_login        (GObject *source,
                                     GAsyncResult *result,
                                     gpointer user_data);
@@ -48,6 +52,7 @@
 static void   on_realm_joined      (GObject *source,
                                     GAsyncResult *result,
                                     gpointer user_data);
+#endif
 
 #define UM_ACCOUNT_DIALOG_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), UM_TYPE_ACCOUNT_DIALOG, \
                                                                     UmAccountDialogClass))
@@ -83,6 +88,7 @@
         gboolean enterprise_domain_chosen;
         GtkEntry *enterprise_login;
         GtkEntry *enterprise_password;
+#ifdef KERBEROS
         UmRealmManager *realm_manager;
         UmRealmObject *selected_realm;
 
@@ -92,6 +98,7 @@
         GtkEntry *join_name;
         GtkEntry *join_password;
         gboolean join_prompted;
+#endif
 };
 
 struct _UmAccountDialogClass {
@@ -300,6 +307,7 @@
         gtk_combo_box_set_active (GTK_COMBO_BOX (self->local_account_type), 0);
 }
 
+#ifdef KERBEROS
 static gboolean
 enterprise_validate (UmAccountDialog *self)
 {
@@ -892,6 +900,7 @@
         gtk_entry_set_text (GTK_ENTRY (self->enterprise_login), "");
         gtk_entry_set_text (GTK_ENTRY (self->enterprise_password), "");
 }
+#endif
 
 static void
 dialog_validate (UmAccountDialog *self)
@@ -902,9 +911,11 @@
         case UM_LOCAL:
                 valid = local_validate (self);
                 break;
+#ifdef KERBEROS
         case UM_ENTERPRISE:
                 valid = enterprise_validate (self);
                 break;
+#endif
         default:
                 valid = FALSE;
                 break;
@@ -990,12 +1001,14 @@
         mode_toggled (UM_ACCOUNT_DIALOG (user_data), toggle, UM_LOCAL);
 }
 
+#ifdef KERBEROS
 static void
 on_enterprise_toggle (GtkToggleButton *toggle,
                       gpointer user_data)
 {
         mode_toggled (UM_ACCOUNT_DIALOG (user_data), toggle, UM_ENTERPRISE);
 }
+#endif
 
 static void
 mode_init (UmAccountDialog *self,
@@ -1007,15 +1020,18 @@
 
         widget = (GtkWidget *) gtk_builder_get_object (builder, "local-area");
         self->mode_areas[UM_LOCAL] = widget;
+#ifdef KERBEROS
         widget = (GtkWidget *) gtk_builder_get_object (builder, "enterprise-area");
         self->mode_areas[UM_ENTERPRISE] = widget;
-
+#endif
         widget = (GtkWidget *) gtk_builder_get_object (builder, "local-button");
         g_signal_connect (widget, "toggled", G_CALLBACK (on_local_toggle), self);
         self->mode_buttons[UM_LOCAL] = widget;
+#ifdef KERBEROS
         widget = (GtkWidget *) gtk_builder_get_object (builder, "enterprise-button");
         g_signal_connect (widget, "toggled", G_CALLBACK (on_enterprise_toggle), self);
         self->mode_buttons[UM_ENTERPRISE] = widget;
+#endif
 }
 
 static void
@@ -1073,8 +1089,10 @@
         self->container_widget = widget;
 
         local_init (self, builder);
+#ifdef KERBEROS
         enterprise_init (self, builder);
         join_init (self, builder);
+#endif
         mode_init (self, builder);
 
         g_object_unref (builder);
@@ -1092,9 +1110,11 @@
                 case UM_LOCAL:
                         local_create_user (self);
                         break;
+#ifdef KERBEROS
                 case UM_ENTERPRISE:
                         enterprise_add_user (self);
                         break;
+#endif
                 default:
                         g_assert_not_reached ();
                 }
@@ -1115,6 +1135,7 @@
         if (self->cancellable)
                 g_cancellable_cancel (self->cancellable);
 
+#ifdef KERBEROS
         if (self->realmd_watch)
                 g_bus_unwatch_name (self->realmd_watch);
         self->realmd_watch = 0;
@@ -1126,7 +1147,7 @@
                 g_object_unref (self->realm_manager);
                 self->realm_manager = NULL;
         }
-
+#endif
         G_OBJECT_CLASS (um_account_dialog_parent_class)->dispose (obj);
 }
 
@@ -1179,7 +1200,9 @@
         self->cancellable = g_cancellable_new ();
 
         local_prepare (self);
+#ifdef KERBEROS
         enterprise_prepare (self);
+#endif
         mode_change (self, UM_LOCAL);
         dialog_validate (self);
 
diff -aurN gnome-control-center-3.8.0.orig/panels/user-accounts/um-realm-manager.c gnome-control-center-3.8.0/panels/user-accounts/um-realm-manager.c
--- gnome-control-center-3.8.0.orig/panels/user-accounts/um-realm-manager.c	2013-03-15 12:59:32.000000000 +0100
+++ gnome-control-center-3.8.0/panels/user-accounts/um-realm-manager.c	2013-03-29 21:11:34.663079768 +0100
@@ -21,6 +21,7 @@
 
 #include "config.h"
 
+#ifdef KERBEROS
 #include "um-realm-manager.h"
 
 #include <krb5/krb5.h>
@@ -899,3 +900,4 @@
 
         return TRUE;
 }
+#endif
