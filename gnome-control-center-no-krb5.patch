diff -aurN gnome-control-center-3.10.0.orig/configure.ac gnome-control-center-3.10.0/configure.ac
--- gnome-control-center-3.10.0.orig/configure.ac	2013-09-28 21:34:49.135434253 +0200
+++ gnome-control-center-3.10.0/configure.ac	2013-09-28 21:36:00.603173471 +0200
@@ -298,17 +298,21 @@
 esac
 AM_CONDITIONAL(BUILD_WACOM, [test x${have_wacom} = xyes])
 
-# Kerberos kerberos support
-AC_PATH_PROG(KRB5_CONFIG, krb5-config, no)
-if test "$KRB5_CONFIG" = "no"; then
-  AC_MSG_ERROR([krb5-config executable not found in your path - should be installed with the kerberos libraries])
-fi
+AC_ARG_ENABLE([kerberos],
+              AS_HELP_STRING([--disable-kerberos], [disable kerberos support (default: enabled)]),,
+              [enable_kerberos=yes])
 
-AC_MSG_CHECKING(for krb5 libraries and flags)
-KRB5_CFLAGS="`$KRB5_CONFIG --cflags`"
-KRB5_LIBS="`$KRB5_CONFIG --libs`"
-AC_MSG_RESULT($KRB5_CFLAGS $KRB5_LIBS)
+if test x"$enable_kerberos" != x"no" ; then
+    AC_PATH_PROG(KRB5_CONFIG, krb5-config, no)
+    if test "$KRB5_CONFIG" = "no"; then
+      AC_MSG_ERROR([krb5-config executable not found in your path - should be installed with the kerberos libraries])
+    fi
 
+    AC_MSG_CHECKING(for krb5 libraries and flags)
+    KRB5_CFLAGS="`$KRB5_CONFIG --cflags`"
+    KRB5_LIBS="`$KRB5_CONFIG --libs`"
+    AC_MSG_RESULT($KRB5_CFLAGS $KRB5_LIBS)
+fi
 AC_SUBST(KRB5_CFLAGS)
 AC_SUBST(KRB5_LIBS)
 
diff -aurN gnome-control-center-3.10.0.orig/panels/user-accounts/um-account-dialog.c gnome-control-center-3.10.0/panels/user-accounts/um-account-dialog.c
--- gnome-control-center-3.10.0.orig/panels/user-accounts/um-account-dialog.c	2013-09-28 21:34:49.124433832 +0200
+++ gnome-control-center-3.10.0/panels/user-accounts/um-account-dialog.c	2013-09-28 22:18:20.891537727 +0200
@@ -27,7 +27,9 @@
 #include <act/act.h>
 
 #include "um-account-dialog.h"
+#ifdef KERBEROS
 #include "um-realm-manager.h"
+#endif
 #include "um-utils.h"
 #include "pw-utils.h"
 
@@ -46,6 +48,7 @@
 
 static void   dialog_validate      (UmAccountDialog *self);
 
+#ifdef KERBEROS
 static void   on_join_login        (GObject *source,
                                     GAsyncResult *result,
                                     gpointer user_data);
@@ -53,6 +56,7 @@
 static void   on_realm_joined      (GObject *source,
                                     GAsyncResult *result,
                                     gpointer user_data);
+#endif
 
 static void   um_account_dialog_response  (GtkDialog *dialog,
                                            gint response_id);
@@ -96,12 +100,13 @@
         GtkEntry *enterprise_domain_entry;
         GtkEntry *enterprise_login;
         GtkEntry *enterprise_password;
-        UmRealmManager *realm_manager;
-        UmRealmObject *selected_realm;
         gboolean enterprise_check_credentials;
         GtkWidget *enterprise_hint;
         GtkWidget *enterprise_domain_hint;
         gint       enterprise_domain_timeout_id;
+#ifdef KERBEROS
+        UmRealmManager *realm_manager;
+        UmRealmObject *selected_realm;
 
         /* Join credential dialog */
         GtkDialog *join_dialog;
@@ -109,6 +114,7 @@
         GtkEntry *join_name;
         GtkEntry *join_password;
         gboolean join_prompted;
+#endif
 };
 
 struct _UmAccountDialogClass {
@@ -144,7 +150,6 @@
 begin_action (UmAccountDialog *self)
 {
         g_debug ("Beginning action, disabling dialog controls");
-
         if (self->enterprise_check_credentials) {
                 gtk_widget_set_sensitive (self->container_widget, FALSE);
         }
@@ -613,6 +618,7 @@
         gtk_combo_box_set_active (GTK_COMBO_BOX (self->local_account_type), 0);
 }
 
+#ifdef KERBEROS
 static gboolean
 enterprise_validate (UmAccountDialog *self)
 {
@@ -1351,6 +1359,7 @@
         gtk_entry_set_text (GTK_ENTRY (self->enterprise_login), "");
         gtk_entry_set_text (GTK_ENTRY (self->enterprise_password), "");
 }
+#endif
 
 static void
 dialog_validate (UmAccountDialog *self)
@@ -1361,9 +1370,11 @@
         case UM_LOCAL:
                 valid = local_validate (self);
                 break;
+#ifdef KERBEROS
         case UM_ENTERPRISE:
                 valid = enterprise_validate (self);
                 break;
+#endif
         default:
                 valid = FALSE;
                 break;
@@ -1395,7 +1406,7 @@
         self->mode = mode;
         dialog_validate (self);
 }
-
+#ifdef KERBEROS
 static void
 on_enterprise_toggle (GtkToggleButton *toggle,
                       gpointer user_data)
@@ -1406,15 +1417,17 @@
         mode = gtk_toggle_button_get_active (toggle) ? UM_ENTERPRISE : UM_LOCAL;
         mode_change (self, mode);
 }
+#endif
 
 static void
 mode_init (UmAccountDialog *self,
            GtkBuilder *builder)
 {
         GtkWidget *widget;
-
+#ifdef KERBEROS
         widget = self->enterprise_button;
         g_signal_connect (widget, "toggled", G_CALLBACK (on_enterprise_toggle), self);
+#endif
 }
 
 static void
@@ -1477,8 +1490,10 @@
         self->container_widget = widget;
 
         local_init (self, builder);
+#ifdef KERBEROS
         enterprise_init (self, builder);
         join_init (self, builder);
+#endif
         mode_init (self, builder);
 
         g_object_unref (builder);
@@ -1526,9 +1541,11 @@
                 case UM_LOCAL:
                         local_create_user (self);
                         break;
+#ifdef KERBEROS
                 case UM_ENTERPRISE:
                         enterprise_add_user (self);
                         break;
+#endif
                 default:
                         g_assert_not_reached ();
                 }
@@ -1549,6 +1566,7 @@
         if (self->cancellable)
                 g_cancellable_cancel (self->cancellable);
 
+#ifdef KERBEROS
         if (self->realmd_watch)
                 g_bus_unwatch_name (self->realmd_watch);
         self->realmd_watch = 0;
@@ -1560,7 +1578,7 @@
                 g_object_unref (self->realm_manager);
                 self->realm_manager = NULL;
         }
-
+#endif
         if (self->local_password_timeout_id != 0) {
                 g_source_remove (self->local_password_timeout_id);
                 self->local_password_timeout_id = 0;
@@ -1638,7 +1656,9 @@
         self->permission = permission ? g_object_ref (permission) : NULL;
 
         local_prepare (self);
+#ifdef KERBEROS
         enterprise_prepare (self);
+#endif
         mode_change (self, UM_LOCAL);
         dialog_validate (self);
 
diff -aurN gnome-control-center-3.10.0.orig/panels/user-accounts/um-realm-manager.c gnome-control-center-3.10.0/panels/user-accounts/um-realm-manager.c
--- gnome-control-center-3.10.0.orig/panels/user-accounts/um-realm-manager.c	2013-09-28 21:34:49.123433793 +0200
+++ gnome-control-center-3.10.0/panels/user-accounts/um-realm-manager.c	2013-09-28 21:36:00.603173471 +0200
@@ -21,6 +21,7 @@
 
 #include "config.h"
 
+#ifdef KERBEROS
 #include "um-realm-manager.h"
 
 #include <krb5/krb5.h>
@@ -908,3 +909,4 @@
 
         return TRUE;
 }
+#endif
